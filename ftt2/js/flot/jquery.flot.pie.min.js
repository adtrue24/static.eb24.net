(function($)
{function init(plot)
{var canvas=null,ctx=null,target=null,eventHolder=null,options=null,maxRadius=null,centerLeft=null,centerTop=null,total=0,redraw=true,redrawAttempts=10,shrink=0.95,legendWidth=0,processed=false,raw=false,lastMousePos={pageX:null,pageY:null},highlights=[];plot.hooks.processOptions.push(checkPieEnabled);plot.hooks.bindEvents.push(bindEvents);function checkPieEnabled(plot,options)
{if(options.series.pie.show)
{options.grid.show=false;if(options.series.pie.label.show=='auto')
if(options.legend.show)
options.series.pie.label.show=false;else
options.series.pie.label.show=true;if(options.series.pie.radius=='auto')
if(options.series.pie.label.show)
options.series.pie.radius=3/4;else
options.series.pie.radius=1;if(options.series.pie.tilt>1)
options.series.pie.tilt=1;if(options.series.pie.tilt<0)
options.series.pie.tilt=0;plot.hooks.processDatapoints.push(processDatapoints);plot.hooks.drawOverlay.push(drawOverlay);plot.hooks.draw.push(draw);}}
function bindEvents(plot,newEventHolder){eventHolder=newEventHolder;var options=plot.getOptions();if(options.series.pie.show&&options.grid.hoverable)
eventHolder.unbind('mousemove').mousemove(onMouseMove);}
function alertObject(obj)
{var msg='';function traverse(obj,depth)
{if(!depth)
depth=0;for(var i in obj)
{for(var j=0;j<depth;j++)
msg+='\t';if(typeof obj[i]=="object")
{msg+=''+i+':\n';traverse(obj[i],depth+1);}
else
{msg+=''+i+': '+obj[i]+'\n';}}}
traverse(obj);alert(msg);}
function calcTotal(data)
{for(var i=0;i<data.length;++i)
{var item=parseFloat(data[i].data[0][1]);if(item)
total+=item;}}
function processDatapoints(plot,series,data,datapoints)
{if(!processed)
{processed=true;canvas=plot.getCanvas();target=$(canvas).parent();options=plot.getOptions();plot.setData(combine(plot.getData()));}}
function setupPie()
{legendWidth=target.children().filter('.legend').children().width();maxRadius=Math.min(canvas.width,canvas.height)/2;centerTop=(canvas.height/2)+options.series.pie.offset.top;centerLeft=(canvas.width/2);if(options.series.pie.offset.left=='auto')
if(options.legend.position.match('w'))
centerLeft+=legendWidth/2;else
centerLeft-=legendWidth/2;else
centerLeft+=options.series.pie.offset.left;if(centerLeft<maxRadius)
centerLeft=maxRadius;else if(centerLeft>canvas.width-maxRadius)
centerLeft=canvas.width-maxRadius;}
function fixData(data)
{for(var i=0;i<data.length;++i)
{if(typeof(data[i].data)=='number')
data[i].data=[[1,data[i].data]];else if(typeof(data[i].data)=='undefined'||typeof(data[i].data[0])=='undefined')
{if(typeof(data[i].data)!='undefined'&&typeof(data[i].data.label)!='undefined')
data[i].label=data[i].data.label;data[i].data=[[1,0]];}}
return data;}
function combine(data)
{data=fixData(data);calcTotal(data);var combined=0;var numCombined=0;var color=options.series.pie.combine.color;var newdata=[];for(var i=0;i<data.length;++i)
{data[i].data[0][1]=parseFloat(data[i].data[0][1]);if(!data[i].data[0][1])
data[i].data[0][1]=0;if(data[i].data[0][1]/total<=options.series.pie.combine.threshold)
{combined+=data[i].data[0][1];numCombined++;if(!color)
color=data[i].color;}
else
{newdata.push({data:[[1,data[i].data[0][1]]],color:data[i].color,label:data[i].label,angle:(data[i].data[0][1]*(Math.PI*2))/total,percent:(data[i].data[0][1]/total*100)});}}
if(numCombined>0)
newdata.push({data:[[1,combined]],color:color,label:options.series.pie.combine.label,angle:(combined*(Math.PI*2))/total,percent:(combined/total*100)});return newdata;}
function draw(plot,newCtx)
{if(!target)return;ctx=newCtx;setupPie();var slices=plot.getData();var attempts=0;while(redraw&&attempts<redrawAttempts)
{redraw=false;if(attempts>0)
maxRadius*=shrink;attempts+=1;clear();if(options.series.pie.tilt<=0.8)
drawShadow();drawPie();}
if(attempts>=redrawAttempts){clear();target.prepend('<div class="error">Could not draw pie with labels contained inside canvas</div>');}
if(plot.setSeries&&plot.insertLegend)
{plot.setSeries(slices);plot.insertLegend();}
function clear()
{ctx.clearRect(0,0,canvas.width,canvas.height);target.children().filter('.pieLabel, .pieLabelBackground').remove();}
function drawShadow()
{var shadowLeft=5;var shadowTop=15;var edge=10;var alpha=0.02;if(options.series.pie.radius>1)
var radius=options.series.pie.radius;else
var radius=maxRadius*options.series.pie.radius;if(radius>=(canvas.width/2)-shadowLeft||radius*options.series.pie.tilt>=(canvas.height/2)-shadowTop||radius<=edge)
return;ctx.save();ctx.translate(shadowLeft,shadowTop);ctx.globalAlpha=alpha;ctx.fillStyle='#000';ctx.translate(centerLeft,centerTop);ctx.scale(1,options.series.pie.tilt);for(var i=1;i<=edge;i++)
{ctx.beginPath();ctx.arc(0,0,radius,0,Math.PI*2,false);ctx.fill();radius-=i;}
ctx.restore();}
function drawPie()
{startAngle=Math.PI*options.series.pie.startAngle;if(options.series.pie.radius>1)
var radius=options.series.pie.radius;else
var radius=maxRadius*options.series.pie.radius;ctx.save();ctx.translate(centerLeft,centerTop);ctx.scale(1,options.series.pie.tilt);ctx.save();var currentAngle=startAngle;for(var i=0;i<slices.length;++i){slices[i].startAngle=currentAngle;drawSlice(slices[i].angle,slices[i].color,true);}
ctx.restore();ctx.save();ctx.lineWidth=options.series.pie.stroke.width;currentAngle=startAngle;for(var i=0;i<slices.length;++i)
drawSlice(slices[i].angle,options.series.pie.stroke.color,false);ctx.restore();if(options.series.pie.label.show)
drawLabels();ctx.restore();function drawSlice(angle,color,fill)
{if(angle<=0)
return;ctx.beginPath();if(angle!=Math.PI*2)
ctx.moveTo(0,0);else if($.browser.msie)
angle-=0.0001;ctx.arc(0,0,radius,currentAngle,currentAngle+angle,false);ctx.closePath();var halfAngle=((currentAngle+angle)+currentAngle)/2;var x=centerLeft+Math.round(Math.cos(halfAngle)*radius);var y=centerTop+Math.round(Math.sin(halfAngle)*radius)*options.series.pie.tilt;currentAngle+=angle;if(fill){if(options.series.pie.gradient.show&&options.series.pie.gradient.colors.length>0){var gradientColors=[];gradientColors.push(color)
for(var i=0;i<options.series.pie.gradient.colors.length;++i){gradientColors.push(options.series.pie.gradient.colors[i]);}
var gradient=ctx.createLinearGradient(0,0,x-centerLeft,y-centerTop);for(var i=0,l=gradientColors.length;i<l;++i){gradient.addColorStop(i/(l-1),gradientColors[i]);}
ctx.fillStyle=gradient;ctx.fill();}else{ctx.fillStyle=color;ctx.fill();}}else{ctx.strokeStyle=color;ctx.stroke();}}
function drawLabels()
{var currentAngle=startAngle;if(options.series.pie.label.radius>1)
var radius=options.series.pie.label.radius;else
var radius=maxRadius*options.series.pie.label.radius;for(var i=0;i<slices.length;++i)
{if(slices[i].percent>=options.series.pie.label.threshold*100)
drawLabel(slices[i],currentAngle,i);currentAngle+=slices[i].angle;}
function drawLabel(slice,startAngle,index)
{if(slice.data[0][1]==0)
return;var lf=options.legend.labelFormatter,text,plf=options.series.pie.label.formatter;if(lf){text=lf(slice.label,slice);}
else{text=slice.label;}
if(plf){text=plf(text,slice);}
var halfAngle=((startAngle+slice.angle)+startAngle)/2;var x=centerLeft+Math.round(Math.cos(halfAngle)*radius);var y=centerTop+Math.round(Math.sin(halfAngle)*radius)*options.series.pie.tilt;var html='<span class="pieLabel" id="pieLabel'+index+'" style="position:absolute;top:'+y+'px;left:'+x+'px;">'+text+"</span>";target.append(html);var label=target.children('#pieLabel'+index);var labelTop=(y-label.height()/2);var labelLeft=(x-label.width()/2);if(options.series.pie.label.show=='border'){ctx.restore();ctx.beginPath();ctx.strokeStyle='#000000';ctx.moveTo(x,y);if(x>(canvas.width/2)){var endX=canvas.width-label.width();var endY=y;labelLeft=endX;}else{var endX=label.width();var endY=y;labelLeft=0;}
ctx.lineTo(endX,endY);ctx.stroke();ctx.save();}
label.css('top',labelTop);label.css('left',labelLeft);if(0-labelTop>0||0-labelLeft>0||canvas.height-(labelTop+label.height())<0||canvas.width-(labelLeft+label.width())<0)
redraw=true;if(options.series.pie.label.background.opacity!=0){var c=options.series.pie.label.background.color;if(c==null){c=slice.color;}
var pos='top:'+labelTop+'px;left:'+labelLeft+'px;';$('<div class="pieLabelBackground" style="position:absolute;width:'+label.width()+'px;height:'+label.height()+'px;'+pos+'background-color:'+c+';"> </div>').insertBefore(label).css('opacity',options.series.pie.label.background.opacity);}}}}
if(options.series.pie.innerRadius>0){radius=options.series.pie.radius>1?options.series.pie.radius:maxRadius*options.series.pie.radius;ctx.translate(centerLeft,centerTop);ctx.scale(1,options.series.pie.tilt);ctx.save();ctx.beginPath();ctx.strokeStyle=options.series.pie.stroke.color;ctx.fillStyle=options.series.pie.stroke.color;ctx.arc(0,0,radius*options.series.pie.innerRadius,0,Math.PI*2,false);ctx.fill();ctx.closePath();}}
function isPointInPoly(poly,pt){for(var c=false,i=-1,l=poly.length,j=l-1;++i<l;j=i)
((poly[i][1]<=pt[1]&&pt[1]<poly[j][1])||(poly[j][1]<=pt[1]&&pt[1]<poly[i][1]))&&(pt[0]<(poly[j][0]-poly[i][0])*(pt[1]-poly[i][1])/(poly[j][1]-poly[i][1])+poly[i][0])&&(c=!c);return c;}
function findNearbyItem(mouseX,mouseY,seriesFilter){var item=null,foundPoint=false,i,j,series=plot.getData(),radius=options.series.pie.radius>1?options.series.pie.radius:maxRadius*options.series.pie.radius;for(var i=0;i<series.length;++i){if(!seriesFilter(series[i]))
continue;var s=series[i];if(s.pie.show){ctx.save();ctx.beginPath();ctx.translate(centerLeft,centerTop);ctx.scale(1,options.series.pie.tilt);ctx.moveTo(0,0);ctx.arc(0,0,radius,s.startAngle,s.startAngle+s.angle,false);ctx.closePath();x=mouseX-centerLeft;y=mouseY-centerTop;if(ctx.isPointInPath){if(ctx.isPointInPath(x,y)){item={datapoint:[series[i].percent,series[i].data],dataIndex:0,series:series[i],seriesIndex:i};}}else{p1X=(radius*Math.cos(s.startAngle));p1Y=(radius*Math.sin(s.startAngle));p2X=(radius*Math.cos(s.startAngle+(s.angle/4)));p2Y=(radius*Math.sin(s.startAngle+(s.angle/4)));p3X=(radius*Math.cos(s.startAngle+(s.angle/2)));p3Y=(radius*Math.sin(s.startAngle+(s.angle/2)));p4X=(radius*Math.cos(s.startAngle+(s.angle/1.5)));p4Y=(radius*Math.sin(s.startAngle+(s.angle/1.5)));p5X=(radius*Math.cos(s.startAngle+s.angle));p5Y=(radius*Math.sin(s.startAngle+s.angle));arrPoly=[[0,0],[p1X,p1Y],[p2X,p2Y],[p3X,p3Y],[p4X,p4Y],[p5X,p5Y]];arrPoint=[x,y];if(isPointInPoly(arrPoly,arrPoint)){item={datapoint:[series[i].percent,series[i].data],dataIndex:0,series:series[i],seriesIndex:i};}}
ctx.restore();}}
return item;}
function onMouseMove(e){if(!processed)return;lastMousePos.pageX=e.pageX;lastMousePos.pageY=e.pageY;if(options.grid.hoverable){triggerClickHoverEvent("plothover",lastMousePos,function(s){return s["hoverable"]!=false;});}}
function triggerClickHoverEvent(eventname,event,seriesFilter){var plotOffset=plot.getPlotOffset(),offset=eventHolder.offset(),pos={pageX:event.pageX,pageY:event.pageY},canvasX=event.pageX-offset.left-plotOffset.left,canvasY=event.pageY-offset.top-plotOffset.top;var item=findNearbyItem(canvasX,canvasY,seriesFilter);if(item){item.pageX=event.pageX;item.pageY=event.pageY;}
if(options.grid.autoHighlight){for(var i=0;i<highlights.length;++i){var h=highlights[i];if(h.auto==eventname&&!(item&&h.series==item.series))
unhighlight(h.series);}
if(item)
highlight(item.series,eventname);}
target.trigger(eventname,[pos,item]);}
function highlight(s,auto){if(typeof s=="number")
s=series[s];var i=indexOfHighlight(s);if(i==-1){highlights.push({series:s,auto:auto});plot.triggerRedrawOverlay();}
else if(!auto)
highlights[i].auto=false;}
function unhighlight(s){if(s==null){highlights=[];plot.triggerRedrawOverlay();}
if(typeof s=="number")
s=series[s];var i=indexOfHighlight(s);if(i!=-1){highlights.splice(i,1);plot.triggerRedrawOverlay();}}
function indexOfHighlight(s){for(var i=0;i<highlights.length;++i){var h=highlights[i];if(h.series==s)
return i;}
return-1;}
function drawOverlay(plot,octx){var radius=options.series.pie.radius>1?options.series.pie.radius:maxRadius*options.series.pie.radius,i,hi;octx.save();octx.translate(centerLeft,centerTop);for(i=0;i<highlights.length;++i){drawHighlight(highlights[i].series);}
octx.restore();function drawHighlight(series){if(series.angle<0)return;octx.fillStyle=parseColor(options.series.pie.highlight.color).scale(null,null,null,options.series.pie.highlight.opacity).toString();octx.beginPath();if(series.angle!=Math.PI*2)
octx.moveTo(0,0);octx.arc(0,0,radius,series.startAngle,series.startAngle+series.angle,false);octx.closePath();octx.fill();}}}
function clamp(min,value,max){if(value<min)
return min;else if(value>max)
return max;else
return value;}
function Color(r,g,b,a){var rgba=['r','g','b','a'];var x=4;while(-1<--x){this[rgba[x]]=arguments[x]||((x==3)?1.0:0);}
this.toString=function(){if(this.a>=1.0){return"rgb("+[this.r,this.g,this.b].join(",")+")";}else{return"rgba("+[this.r,this.g,this.b,this.a].join(",")+")";}};this.scale=function(rf,gf,bf,af){x=4;while(-1<--x){if(arguments[x]!=null)
this[rgba[x]]*=arguments[x];}
return this.normalize();};this.adjust=function(rd,gd,bd,ad){x=4;while(-1<--x){if(arguments[x]!=null)
this[rgba[x]]+=arguments[x];}
return this.normalize();};this.clone=function(){return new Color(this.r,this.b,this.g,this.a);};var limit=function(val,minVal,maxVal){return Math.max(Math.min(val,maxVal),minVal);};this.normalize=function(){this.r=clamp(0,parseInt(this.r),255);this.g=clamp(0,parseInt(this.g),255);this.b=clamp(0,parseInt(this.b),255);this.a=clamp(0,this.a,1);return this;};this.normalize();}
function parseColor(str){var result;if(result=/rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(str))
return new Color(parseInt(result[1],10),parseInt(result[2],10),parseInt(result[3],10));if(result=/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(str))
return new Color(parseInt(result[1],10),parseInt(result[2],10),parseInt(result[3],10),parseFloat(result[4]));if(result=/rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(str))
return new Color(parseFloat(result[1])*2.55,parseFloat(result[2])*2.55,parseFloat(result[3])*2.55);if(result=/rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(str))
return new Color(parseFloat(result[1])*2.55,parseFloat(result[2])*2.55,parseFloat(result[3])*2.55,parseFloat(result[4]));if(result=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))
return new Color(parseInt(result[1],16),parseInt(result[2],16),parseInt(result[3],16));if(result=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))
return new Color(parseInt(result[1]+result[1],16),parseInt(result[2]+result[2],16),parseInt(result[3]+result[3],16));var name=$.trim(str).toLowerCase();if(name=="transparent")
return new Color(255,255,255,0);else{result=lookupColors[name];return new Color(result[0],result[1],result[2]);}}
var options={series:{pie:{show:false,radius:'auto',innerRadius:0,startAngle:0,tilt:1,offset:{top:0,left:'auto'},stroke:{color:'#FFF',width:1},label:{show:'auto',formatter:function(label,slice){return'<div style="font-size:x-small;text-align:center;padding:2px;color:'+slice.color+';">'+label+'<br/>'+Math.round(slice.percent)+'%</div>';},radius:1,background:{color:null,opacity:0},threshold:0},gradient:{show:false,colors:[]},combine:{threshold:-1,color:null,label:'Other'},highlight:{color:'#ffee77',opacity:0.2}}}};$.plot.plugins.push({init:init,options:options,name:"pie",version:"0.4"});})(jQuery);